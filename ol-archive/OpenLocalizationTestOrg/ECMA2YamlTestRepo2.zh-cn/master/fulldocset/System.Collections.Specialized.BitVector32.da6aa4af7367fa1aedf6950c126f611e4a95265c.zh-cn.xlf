<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ddf5c098589277c135cc2919d2ef42ef1218a1a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Specialized.BitVector32.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e22f05021000d6fdcf358ae71cfa780d565a6f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d387378e998ed8e93332f213f12f63e17c809117</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>BitVector32 is more efficient than &lt;xref:System.Collections.BitArray&gt; for Boolean values and small integers that are used internally.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.BitArray&gt; can grow indefinitely as needed, but it has the memory and performance overhead that a class instance requires.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In contrast, a BitVector32 uses only 32 bits.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A BitVector32 structure can be set up to contain either sections for small integers or bit flags for Booleans, but not both.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Specialized.BitVector32.Section&gt; is a window into the BitVector32 and is composed of the smallest number of consecutive bits that can contain the maximum value specified in &lt;xref:System.Collections.Specialized.BitVector32.CreateSection%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can create a &lt;xref:System.Collections.Specialized.BitVector32.Section&gt; with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same BitVector32.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Some members can be used for a BitVector32 that is set up as sections, while other members can be used for one that is set up as bit flags.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName&gt; property is the indexer for a BitVector32 that is set up as sections, and the &lt;xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName&gt; property is the indexer for a BitVector32 that is set up as bit flags.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Specialized.BitVector32.CreateMask%2A&gt; creates a series of masks that can be used to access individual bits in a BitVector32 that is set up as bit flags.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Using a mask on a BitVector32 that is set up as sections might cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure containing the data represented in an existing <bpt id="p2">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> structure.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that contains the data to copy.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure containing the data represented in an integer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An integer representing the data of the new <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates the first mask in a series of masks that can be used to retrieve individual bits in a <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is set up as bit flags.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateMask()`</ph> to create the first mask in a series and <ph id="ph2">`CreateMask(int)`</ph> for all subsequent masks.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Multiple masks can be created to refer to the same bit flag.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The resulting mask isolates only one bit flag in the &lt;xref:System.Collections.Specialized.BitVector32&gt;.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the &lt;xref:System.Collections.Specialized.BitVector32&gt;.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Using a mask on a &lt;xref:System.Collections.Specialized.BitVector32&gt; that is set up as sections might cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A mask that isolates the first bit flag in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is set up as bit flags.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`CreateMask()`</ph> to create the first mask in a series and <ph id="ph2">`CreateMask(int)`</ph> for all subsequent masks.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Multiple masks can be created to refer to the same bit flag.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The resulting mask isolates only one bit flag in the &lt;xref:System.Collections.Specialized.BitVector32&gt;.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the &lt;xref:System.Collections.Specialized.BitVector32&gt;.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Using a mask on a &lt;xref:System.Collections.Specialized.BitVector32&gt; that is set up as sections might cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The mask that indicates the previous bit flag.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A mask that isolates the bit flag following the one that <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">previous</ph><ept id="p1">&lt;/code&gt;</ept> points to in <bpt id="p2">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;previous&lt;/code&gt;</ph> indicates the last bit flag in the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Creates the first &lt;xref:System.Collections.Specialized.BitVector32.Section&gt; in a series of sections that contain small integers.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Specialized.BitVector32.Section&gt; is a window into the &lt;xref:System.Collections.Specialized.BitVector32&gt; and is composed of the smallest number of consecutive bits that can contain the maximum value specified in CreateSection.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can create a &lt;xref:System.Collections.Specialized.BitVector32.Section&gt; with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same &lt;xref:System.Collections.Specialized.BitVector32&gt;.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If sections already exist in the &lt;xref:System.Collections.Specialized.BitVector32&gt;, those sections are still accessible; however, overlapping sections might cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A 16-bit signed integer that specifies the maximum value for the new &lt;xref:System.Collections.Specialized.BitVector32.Section&gt;.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Specialized.BitVector32.Section&gt; that can hold a number from zero to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxValue</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxValue&lt;/code&gt;</ph> is less than 1.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the value of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an integer.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To access the value of the individual sections or bit flags, use the &lt;xref:System.Collections.Specialized.BitVector32.Item%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> as an integer.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The object <ph id="ph1">`o`</ph> is considered equal to the &lt;xref:System.Collections.Specialized.BitVector32&gt; if the type of <ph id="ph2">`o`</ph> is compatible with the &lt;xref:System.Collections.Specialized.BitVector32&gt; type and if the value of <ph id="ph3">`o`</ph> is equal to the value of &lt;xref:System.Collections.Specialized.BitVector32.Data%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified object is equal to the <bpt id="p2">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;xref:System.Collections.Specialized.BitVector32&gt; is based on the value of &lt;xref:System.Collections.Specialized.BitVector32.Data%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;xref:System.Collections.Specialized.BitVector32&gt; with the same value for &lt;xref:System.Collections.Specialized.BitVector32.Data%2A&gt; will also generate the same hash code.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A hash code for the <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the state of the bit flag indicated by the specified mask.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Item [Section] property is the indexer for a &lt;xref:System.Collections.Specialized.BitVector32&gt; that is set up as sections, and the Item [int] property is the indexer for a &lt;xref:System.Collections.Specialized.BitVector32&gt; that is set up as bit flags.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Using this property on a &lt;xref:System.Collections.Specialized.BitVector32&gt; that is set up as sections might cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A mask that indicates the bit to get or set.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified bit flag is on (1); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.ToString%2A?displayProperty=fullName&gt;.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A string that represents the current <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the specified <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to represent.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A string that represents the specified <bpt id="p1">&lt;xref href="System.Collections.Specialized.BitVector32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>